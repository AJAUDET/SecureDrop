# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: "3.9"

services:
  backend:
    container_name: securedrop-backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=securedrop
      - POSTGRES_PASSWORD=securedrop
      - POSTGRES_DB=securedrop
    ports:
      - "5432:5432"   # database
      - "8080:8080"   # optional API or internal backend port
    volumes:
      - backend_data:/var/lib/postgresql/data
    networks:
      - securedrop_net
  user-template:
    build:
      context: .
      dockerfile: user/Dockerfile
    environment:
      - USER_ID=${USER_ID}
      - USER_NAME=${USER_NAME}
      - BACKEND_URL=http://securedrop-backend:8080
    depends_on:
      - backend
    networks:
      - securedrop_net
    volumes:
      - ./contacts:/app/contacts
      - ./private_keys:/app/private_keys
      - ./public_keys:/app/public_keys
      - ./uploads:/app/uploads
    deploy:
      replicas: 0  # No default containers â€” created dynamically via Python script

networks:
  securedrop_net:
    driver: bridge

volumes:
  backend_data: